<?xml version="1.0" encoding="UTF-8"?>
<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>life.qbic</groupId>
	<artifactId>parent-pom</artifactId>
	<!-- if it's a release version, avoid using SNAPSHOT dependencies to avoid inconsistencies -->
	<version>1.0.0-SNAPSHOT</version>
	<name>Parent POM</name>
	<description>Parent POM for all QBiC software</description>
	<packaging>pom</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<log4j.version>2.11.0</log4j.version>
		<vaadin.version>7.7.8</vaadin.version>
		<liferay.version>6.2.5</liferay.version>
		<vaadin.plugin.version>7.7.8</vaadin.plugin.version>
		<liferay.maven.plugin.version>6.2.5</liferay.maven.plugin.version>
		<powermock.version>2.0.0-beta.5</powermock.version>
		<jetty.plugin.version>9.4.10.v20180503</jetty.plugin.version>
	</properties>
	<prerequisites>
		<maven>3</maven>
	</prerequisites>
	<!-- we define dependencies in the dependencyManagement section so child poms have control over WHICH dependencies they use,
	     but we centralize the control over which version is used -->
	<dependencyManagement>
		<dependencies>
			<!-- Internal QBiC dependencies -->
			<dependency>
				<groupId>life.qbic</groupId>
				<artifactId>openbis-client-lib</artifactId>
				<version>1.1.4-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>life.qbic.openbis</groupId>
				<artifactId>openbis_api</artifactId>
				<version>3-S253.0</version>
			</dependency>
			<dependency>
				<groupId>life.qbic</groupId>
				<artifactId>portal-utils-lib</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>
			<!-- Access to QBiC internal databases (portlets use direct JDBC to access data for now),
				 but we will create a client library that portlets will use -->
			<dependency>
				<groupId>org.mariadb.jdbc</groupId>
				<artifactId>mariadb-java-client</artifactId>
				<version>2.0.2</version>
			</dependency>
			<!-- Vaadin offers a bill of materials including all of the vaadin artifacts -->
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.vaadin.addon</groupId>
				<artifactId>vaadin-charts</artifactId>
				<version>3.2.0</version>
			</dependency>
			<!-- Liferay -->
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>portal-service</artifactId>
				<version>${liferay.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>util-java</artifactId>
				<version>${liferay.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- J2EE dependencies -->
			<dependency>
				<groupId>javax.portlet</groupId>
				<artifactId>portlet-api</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
				<scope>provided</scope>
			</dependency>
			<!-- command-line argument parsing -->
			<dependency>
				<groupId>info.picocli</groupId>
				<artifactId>picocli</artifactId>
				<version>3.0.0</version>
			</dependency>
			<!-- logging -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- other utilities -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.7</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>1.3</version>
			</dependency>
			<!-- dependencies used for automated testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.18.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito2</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.google.truth</groupId>
				<artifactId>truth</artifactId>
				<version>0.40</version>
				<scope>test</scope>
			</dependency>
			<dependency>
  				<groupId>com.github.stefanbirkner</groupId>
  				<artifactId>system-rules</artifactId>
  				<version>1.17.2</version>
  				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- dependencies shared across all QBiC artifacts -->
	<dependencies>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.3</version>
		</dependency>
		<!-- dependencies used for automated testing -->
	        <dependency>
       		    	<groupId>org.junit.jupiter</groupId>
      		      	<artifactId>junit-jupiter-api</artifactId>
           		<version>5.2.0</version>
            		<scope>test</scope>
        	</dependency>
        	<dependency>
            		<groupId>org.junit.jupiter</groupId>
            		<artifactId>junit-jupiter-engine</artifactId>
            		<version>5.2.0</version>
            		<scope>test</scope>
        	</dependency>
       		<dependency>
            		<groupId>org.junit.vintage</groupId>
            		<artifactId>junit-vintage-engine</artifactId>
            		<version>5.2.0</version>
            		<scope>test</scope>
        	</dependency>
        	<dependency>
            		<groupId>org.junit.platform</groupId>
            		<artifactId>junit-platform-launcher</artifactId>
            		<version>1.2.0</version>
            		<scope>test</scope>
        	</dependency>
        	<dependency>
            		<groupId>org.junit.platform</groupId>
            		<artifactId>junit-platform-runner</artifactId>
            		<version>1.2.0</version>
           		 <scope>test</scope>
        	</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.truth</groupId>
			<artifactId>truth</artifactId>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>liferay-releases</id>
			<url>https://repository.liferay.com/nexus/content/repositories/liferay-public-releases/com/liferay/portal/</url>
		</repository>
		<!-- vaadin repos -->
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<uniqueVersion>true</uniqueVersion>
			<id>nexus-releases</id>
			<name>QBiC Releases</name>
			<url>https://qbic-repo.am10.uni-tuebingen.de/repository/maven-releases</url>
		</repository>
		<snapshotRepository>
			<uniqueVersion>false</uniqueVersion>
			<id>nexus-snapshots</id>
			<name>QBiC Snapshots</name>
			<url>https://qbic-repo.am10.uni-tuebingen.de/repository/maven-snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<pluginRepositories>
		<pluginRepository>
			<id>liferay-releases-plugins</id>
			<url>https://repository.liferay.com/nexus/content/repositories/liferay-public-releases/com/liferay/portal/</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>2</scanIntervalSeconds>
					<useProvidedScope>true</useProvidedScope>
					<stopPort>8005</stopPort>
					<stopKey>STOP</stopKey>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<configuration>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>integration-test</phase>
						<configuration>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/*IntegrationTest.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.21.0</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
				</configuration>
			</plugin>
		</plugins>
		
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/webapp</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/webapp</directory>
			</testResource>
		</testResources>

	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>development-build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>3.0.0-M1</version>
						<executions>
							<execution>
								<id>enforce-no-releases</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireSnapshotVersion>
											<message>No releases allowed. Version must end with "-SNAPSHOT". Check that the &lt;version&gt; tag contains a non-release version string.</message>
										</requireSnapshotVersion>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>3.0.0-M1</version>
						<executions>
							<execution>
								<id>enforce-no-snapshots</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireReleaseVersion>
											<message>Only release versions are allowed. The suffix "-SNAPSHOT" is not allowed in release versions. Check that the &lt;version&gt; contains a release version string.</message>
										</requireReleaseVersion>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
